--<JAVADB>--

--1. USERTBL 테이블 생성
--NO: 숫자 4자리, USERNAME: 한글 4자리, BIRTHYEAR: 년도 숫자 4자리, ADDR: 주소 한글/숫자, MOBILE: 010-1234-1234
--NO PK 제약조건 지정(제약조건명: PK_USERTBL)
CREATE TABLE USERTBL(
NO NUMBER(4) CONSTRAINT PK_USERTBL PRIMARY KEY,
USERNAME NVARCHAR2(4) NOT NULL,
BIRTHYEAR NUMBER(4) NOT NULL,
ADDR VARCHAR2(50) NOT NULL,
MOBILE VARCHAR2(50));

desc usertbl;

--select(+서브쿼리, 조인) + DML(insert, delete, update)
--전체조회
select * from usertbl;
--개별조회(특정번호, 특정이름...)
--여러 행이 나오는 상태냐? 하나의 행이 결과로 나올 것이냐?
select * from usertbl where no=1;
select * from usertbl where username='홍길동';

--like: _ or % 와 함께 쓴다.
select * from usertbl where username like '_길동%';

--insert into 테이블명(필드명1, 필드명2...)
--values();

--update 테이블명
--set 업데이트할 필드명=값, 업데이트할 필드명=값....
--where 조건;

--delete 테이블명 where 조건

--delete from 테이블명 where 조건

--시퀀스 생성
--USER_SEQ 생성(기본)
CREATE SEQUENCE USER_SEQ;

--행 추가
INSERT INTO USERTBL(NO, USERNAME, BIRTHYEAR, ADDR, MOBILE) 
VALUES(USER_SEQ.NEXTVAL, '홍길동', 1990, '서울시 서초구 서초중앙로200', '010-1234-1234');

COMMIT;


--모든 컬럼은 NOT NULL
--2. PAYTYPE 테이블 생성
--PAYTYPE: PAY_NO(숫자 1자리-PK), INFO(영어 4자리)
--PAYTYPE_SEQ 생성
CREATE TABLE PAYTYPE(
PAY_NO NUMBER(1) PRIMARY KEY,
INFO VARCHAR2(4) NOT NULL);

CREATE SEQUENCE PAYTYPE_SEQ;

INSERT INTO PAYTYPE VALUES(PAYTYPE_SEQ.NEXTVAL, 'CARD');
INSERT INTO PAYTYPE VALUES(PAYTYPE_SEQ.NEXTVAL, 'CASH');

SELECT * FROM PAYTYPE; --1: CARD, 2: CASH 


--3. SHOP USER 테이블 생성
--SUSER: USER_ID(숫자 4자리-PK), NAME(한글), PAY_NO(숫자 1자리: PAYTYPE에 있는 PAY_NO 참조해서 사용)
CREATE TABLE SUSER(
USER_ID NUMBER(4) PRIMARY KEY,
NAME VARCHAR2(50) NOT NULL,
PAY_NO NUMBER(1) NOT NULL CONSTRAINT SUSER_PAY_NO_FK REFERENCES PAYTYPE(PAY_NO));


--4. PRODUCT 테이블 생성
--PRODUCT: PRODUCT_ID(숫자 8자리-PK), PNAME(문자), PRICE(숫자), CONTENT(문자 FOR 해상도)
CREATE TABLE PRODUCT(
PRODUCT_ID NUMBER(8) PRIMARY KEY,
PNAME VARCHAR2(50) NOT NULL,
PRICE NUMBER(10) NOT NULL,
CONTENT VARCHAR2(50) NOT NULL);


--5. SHOP ORDER 테이블 생성
--SORDER: ORDER_ID(숫자 8자리-PK), USER_ID(USER에 있는 USER_ID 참조), PRODUCT_ID(PRODUCT에 있는 PRODUCT_ID 참조)
--ORDER_SEQ 생성
CREATE TABLE SORDER(
ORDER_ID NUMBER(8) PRIMARY KEY,
USER_ID NOT NULL CONSTRAINT SORDER_USER_ID_FK REFERENCES SUSER(USER_ID),
PRODUCT_ID NOT NULL CONSTRAINT SORDER_PRODUCT_ID_FK REFERENCES PRODUCT(PRODUCT_ID));
--구매일 추가
ALTER TABLE SORDER ADD ORDER_DATE DATE;

CREATE SEQUENCE ORDER_SEQ;
--장바구니
--INSERT INTO SORDER VALUES(ORDER_SEQ.NEXTVAL, 물건을 구매한 ID, 상품ID, SYODATE)
--주문 정보 전체 조회
SELECT * FROM SORDER;


--6. SUSER와 PAYTYPE 조인
SELECT S.USER_ID, S.NAME, P.PAY_NO, P.INFO FROM SUSER S, PAYTYPE P 
WHERE S.PAY_NO=P.PAY_NO AND S.USER_ID=1000;


--7. 전체 주문 목록 조회: 기준은 SORDER
--USER_ID, NAME, CARD/CASH, PRODUCT_ID, PNAME, PRICE, CONTENT
--SUSER 테이블: NAME, PAYTYPE 테이블: CARD/CASH, PRODUCT 테이블: PRODUCT_ID, PNAME, PRICE, CONTENT
SELECT O.USER_ID, S.NAME, T.INFO, P.PRODUCT_ID, P.PNAME, P.PRICE, P.CONTENT, O.ORDER_DATE
FROM SORDER O, SUSER S, PAYTYPE T, PRODUCT P 
WHERE O.USER_ID=S.USER_ID AND O.PRODUCT_ID=P.PRODUCT_ID AND S.PAY_NO=T.PAY_NO;


--8. 홍길동 주문 목록 조회: 기준은 SORDER
--USER_ID, NAME, CARD/CASH, PRODUCT_ID, PNAME, PRICE, CONTENT
--SUSER 테이블: NAME, PAYTYPE 테이블: CARD/CASH, PRODUCT 테이블: PRODUCT_ID, PNAME, PRICE, CONTENT
SELECT O.USER_ID, S.NAME, T.INFO, P.PRODUCT_ID, P.PNAME, P.PRICE, P.CONTENT, O.ORDER_DATE
FROM SORDER O, SUSER S, PAYTYPE T, PRODUCT P 
WHERE O.USER_ID=S.USER_ID AND O.PRODUCT_ID=P.PRODUCT_ID AND S.PAY_NO=T.PAY_NO AND O.USER_ID=1000;


--9. 도서 table 생성
--code, title, writer, price 컬럼 4개 필요
--code: 1001(PK)
--title: '자바의 신'
--writer: '홍길동'
--price: 25000
CREATE TABLE BOOKTBL(
CODE NUMBER(4) PRIMARY KEY,
TITLE NVARCHAR2(20) NOT NULL,
WRITER NVARCHAR2(20) NOT NULL,
PRICE NUMBER(8) NOT NULL);

INSERT INTO BOOKTBL(CODE, TITLE, WRITER, PRICE) VALUES(1001,'이것이 자바다','신용균',25000);
INSERT INTO BOOKTBL(CODE, TITLE, WRITER, PRICE) VALUES(1002,'자바의 신','강신용',28000);
INSERT INTO BOOKTBL(CODE, TITLE, WRITER, PRICE) VALUES(1003,'오라클로 배우는 데이터베이스','이지훈',28000);
INSERT INTO BOOKTBL(CODE, TITLE, WRITER, PRICE) VALUES(1004,'자바 1000제','김용만',29000);
INSERT INTO BOOKTBL(CODE, TITLE, WRITER, PRICE) VALUES(1005,'자바 프로그래밍 입문','박은종',30000);

COMMIT;

alter table booktbl add decription NVARCHAR2(100);


--10. member table 생성, 모두 NOT NULL
--USERID(영어, 숫자, 특수문자) 최대 12문자 허용, PK
--PASSWORD(영어, 숫자, 특수문자) 최대 15 허용
--NAME(한글)
--GENDER(한글: 남, 여)
--EMAIL
CREATE TABLE MEMBERTBL(
USERID VARCHAR2(15) PRIMARY KEY,
PASSWORD VARCHAR2(20) NOT NULL,
NAME NVARCHAR2(10) NOT NULL,
GENDER NVARCHAR2(2) NOT NULL,
EMAIL VARCHAR2(50) NOT NULL);

INSERT INTO MEMBERTBL VALUES('hong123','hong123#','홍길동','남','hong123@naver.com');
commit;









